#!/bin/bash

# MetaCPAN Web Development Environment Setup Script
# This script automates the setup process for new developers

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if we're in the right directory
if [[ ! -f "cpanfile" || ! -f "package.json" ]]; then
    log_error "This script must be run from the metacpan-web repository root directory"
    exit 1
fi

log_info "Setting up MetaCPAN Web development environment..."

# Check system requirements
log_info "Checking system requirements..."

# Check Perl
if ! command -v perl >/dev/null 2>&1; then
    log_error "Perl is required but not installed"
    exit 1
fi
PERL_VERSION=$(perl -e 'print $^V' | sed 's/v//')
log_info "Found Perl $PERL_VERSION"

# Check Node.js
if ! command -v node >/dev/null 2>&1; then
    log_error "Node.js is required but not installed"
    exit 1
fi
NODE_VERSION=$(node --version)
log_info "Found Node.js $NODE_VERSION"

# Check npm
if ! command -v npm >/dev/null 2>&1; then
    log_error "npm is required but not installed"
    exit 1
fi
NPM_VERSION=$(npm --version)
log_info "Found npm $NPM_VERSION"

# Install system dependencies
log_info "Installing system dependencies..."
if command -v apt-get >/dev/null 2>&1; then
    if ! dpkg -l | grep -q libcmark-dev; then
        log_info "Installing libcmark-dev..."
        sudo apt-get update -qq
        sudo apt-get install -y libcmark-dev
    else
        log_info "libcmark-dev already installed"
    fi
else
    log_warn "apt-get not found, please install libcmark development package manually"
fi

# Install Perl development tools
log_info "Installing Perl development tools..."

# Check if carton is available
if ! command -v carton >/dev/null 2>&1; then
    log_info "Installing Carton..."
    cpanm Carton
else
    log_info "Carton already installed"
fi

# Check if cpm is available
if ! command -v cpm >/dev/null 2>&1; then
    log_info "Installing App::cpm..."
    cpanm App::cpm
else
    log_info "App::cpm already installed"
fi

# Add local Perl lib to PATH if needed
if [[ -d "$HOME/perl5/bin" ]]; then
    export PERL5LIB="$HOME/perl5/lib/perl5:${PERL5LIB:-}"
    export PATH="$HOME/perl5/bin:$PATH"
fi

# Install npm dependencies
log_info "Installing Node.js dependencies..."
npm install

# Install Perl dependencies
log_info "Installing Perl dependencies..."
if command -v cpm >/dev/null 2>&1; then
    log_info "Using cpm for faster installation..."
    cpm install --resolver=snapshot
else
    log_info "Using carton..."
    carton install
fi

# Build static assets
log_info "Building static assets..."
npm run build

# Set up git hooks
if [[ -f "git/setup.sh" ]]; then
    log_info "Setting up git hooks..."
    ./git/setup.sh
else
    log_warn "git/setup.sh not found, skipping git hooks setup"
fi

# Run basic tests to verify setup
log_info "Running basic tests to verify setup..."
if command -v carton >/dev/null 2>&1; then
    log_info "Testing with offline-capable tests..."
    if carton exec prove -l t/moose.t t/assets.t t/static-files.t t/session.t; then
        log_info "Basic tests passed!"
    else
        log_warn "Some basic tests failed, but the setup might still be functional"
    fi
else
    log_warn "Carton not available, skipping tests"
fi

log_info "Development environment setup complete!"
echo
log_info "You can now:"
echo "  • Run the development server: carton exec plackup -p 5001 -r app.psgi"
echo "  • Run tests: carton exec prove -l -r t"
echo "  • Build assets: npm run build"
echo "  • Watch for asset changes: npm run build:watch"
echo
log_warn "Note: Some tests require network access to api.metacpan.org and will fail in isolated environments"
